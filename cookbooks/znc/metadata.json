{
  "dependencies": {
    "build-essential": ">= 0.0.0"
  },
  "name": "znc",
  "maintainer_email": "chris.fordham@rightscale.com",
  "attributes": {
    "znc/skin": {
      "required": "optional",
      "calculated": false,
      "choice": [
        "dark-clouds"
      ],
      "default": "dark-clouds",
      "type": "string",
      "recipes": [
        "znc::configure"
      ],
      "description": "ZNC skin.",
      "display_name": "ZNC Skin"
    },
    "znc/admin_user": {
      "required": "optional",
      "calculated": false,
      "choice": [

      ],
      "default": "znc-admin",
      "type": "string",
      "recipes": [
        "znc::configure"
      ],
      "description": "The name of the ZNC admin user.",
      "display_name": "ZNC Admin User"
    },
    "znc/status_prefix": {
      "required": "optional",
      "calculated": false,
      "choice": [

      ],
      "type": "string",
      "recipes": [
        "znc::configure"
      ],
      "description": "The prefix for the status and module queries. This setting may be overwritten by users.",
      "display_name": "ZNC Status Prefix"
    },
    "znc/motd": {
      "required": "optional",
      "calculated": false,
      "choice": [

      ],
      "default": "Welcome to ZNC.",
      "type": "string",
      "recipes": [
        "znc::configure"
      ],
      "description": "The 'message of the day' which is sent to clients on connect via notice from *status. Can be specified multiple times.",
      "display_name": "ZNC MOTD"
    },
    "znc/admin_password": {
      "required": "required",
      "calculated": false,
      "choice": [

      ],
      "type": "string",
      "recipes": [
        "znc::configure"
      ],
      "description": "The password of the ZNC admin user.",
      "display_name": "ZNC Admin Password"
    },
    "znc/bind_hosts": {
      "required": "optional",
      "calculated": false,
      "choice": [

      ],
      "default": "127.0.0.1",
      "type": "string",
      "recipes": [
        "znc::configure"
      ],
      "description": "This is a list of allowed bindhosts for ZNC.",
      "display_name": "ZNC Bind Host"
    },
    "znc/port": {
      "required": "optional",
      "calculated": false,
      "choice": [
        "+7777"
      ],
      "default": "+7777",
      "type": "string",
      "recipes": [
        "znc::configure"
      ],
      "description": "ZNC daemon listen port.",
      "display_name": "ZNC IPv4 Listen Port"
    },
    "znc/foreground": {
      "required": "optional",
      "calculated": false,
      "choice": [
        "yes",
        "no"
      ],
      "default": "no",
      "type": "string",
      "recipes": [
        "znc::install_service"
      ],
      "description": "Enable/disable foreground of the ZNC service process.",
      "display_name": "ZNC Foreground Mode"
    },
    "znc/anon_ip_limit": {
      "required": "optional",
      "calculated": false,
      "choice": [

      ],
      "default": "2",
      "type": "string",
      "recipes": [
        "znc::configure"
      ],
      "description": "Limits the number of unidentified connections per IP with ZNC.",
      "display_name": "ZNC Anonymous IP Limit"
    },
    "znc/connect_delay": {
      "required": "optional",
      "calculated": false,
      "choice": [

      ],
      "default": "3",
      "type": "string",
      "recipes": [
        "znc::configure"
      ],
      "description": "The time every connection will be delayed, in seconds. Some servers refuse your connection if you reconnect too fast. This affects the connection between ZNC and the IRC server; not the connection between your IRC client and ZNC.",
      "display_name": "ZNC Connect Delay"
    },
    "znc/configure_options": {
      "required": "optional",
      "calculated": false,
      "choice": [

      ],
      "default": "",
      "type": "string",
      "recipes": [
        "znc::source"
      ],
      "description": "./configure options for ZNC.",
      "display_name": "ZNC Compile Options"
    },
    "znc/module_dir": {
      "required": "optional",
      "calculated": false,
      "choice": [

      ],
      "default": "/etc/znc/modules",
      "type": "string",
      "recipes": [
        "znc::configure",
        "znc::modules",
        "znc:module_colloquy"
      ],
      "description": "Directory where ZNC modules will be stored",
      "display_name": "ZNC Module Dir"
    },
    "znc/data_dir": {
      "required": "optional",
      "calculated": false,
      "choice": [

      ],
      "default": "/etc/znc",
      "type": "string",
      "recipes": [
        "znc::configure",
        "znc::generate_cert"
      ],
      "description": "Directory where ZNC data will be stored",
      "display_name": "ZNC Data Dir"
    },
    "znc/max_buffer_size": {
      "required": "optional",
      "calculated": false,
      "choice": [
        "500",
        "1024"
      ],
      "default": "500",
      "type": "string",
      "recipes": [
        "znc::configure"
      ],
      "description": "ZNC maximum buffer size.",
      "display_name": "ZNC Max Buffer Size"
    },
    "znc/use_screen_session": {
      "required": "optional",
      "calculated": false,
      "choice": [
        "yes",
        "no"
      ],
      "default": "no",
      "type": "string",
      "recipes": [
        "znc::install_service"
      ],
      "description": "Enable/disable starts/stops of the ZNC service in a screen session.",
      "display_name": "ZNC Run in Screen"
    },
    "znc/install_method": {
      "required": "optional",
      "calculated": false,
      "choice": [
        "package",
        "source",
        "git-devel",
        "nightly"
      ],
      "default": "package",
      "type": "string",
      "recipes": [
        "znc::install"
      ],
      "description": "The installation source for znc, either source or package",
      "display_name": "ZNC Install Method"
    },
    "znc/user_dir": {
      "required": "optional",
      "calculated": false,
      "choice": [

      ],
      "default": "/etc/znc/users",
      "type": "string",
      "recipes": [
        "znc::configure",
        "znc::generate_cert"
      ],
      "description": "Directory where ZNC users will be stored",
      "display_name": "ZNC User Dir"
    },
    "znc/system_user": {
      "required": "optional",
      "calculated": false,
      "choice": [

      ],
      "default": "znc",
      "type": "string",
      "recipes": [
        "znc::configure",
        "znc::generate_cert"
      ],
      "description": "The name of the system user under which ZNC will be run.",
      "display_name": "ZNC System User"
    },
    "znc/pid_file": {
      "required": "optional",
      "calculated": false,
      "choice": [

      ],
      "default": "/var/lib/znc.pid",
      "type": "string",
      "recipes": [
        "znc::configure"
      ],
      "description": "The PID file for ZNC.",
      "display_name": "ZNC PID File"
    },
    "znc/system_group": {
      "required": "optional",
      "calculated": false,
      "choice": [

      ],
      "default": "znc",
      "type": "string",
      "recipes": [
        "znc::configure",
        "znc::generate_cert"
      ],
      "description": "The name of the system group under which ZNC will be run",
      "display_name": "ZNC System Group"
    },
    "znc/log_dir": {
      "required": "optional",
      "calculated": false,
      "choice": [

      ],
      "default": "/var/log/znc",
      "type": "string",
      "recipes": [
        "znc::configure"
      ],
      "description": "Directory where ZNC logs will be stored",
      "display_name": "ZNC Log Dir"
    },
    "znc/conf_dir": {
      "required": "optional",
      "calculated": false,
      "choice": [

      ],
      "default": "/etc/znc/configs",
      "type": "string",
      "recipes": [
        "znc::configure"
      ],
      "description": "Directory where ZNC configuration will be stored",
      "display_name": "ZNC Config Dir"
    },
    "znc/users": {
      "required": "optional",
      "calculated": false,
      "choice": [

      ],
      "default": "znc",
      "type": "string",
      "recipes": [
        "znc::configure"
      ],
      "description": "Initial users to create when configuring ZNC.",
      "display_name": "ZNC Users"
    },
    "znc/debug": {
      "required": "optional",
      "calculated": false,
      "choice": [
        "yes",
        "no"
      ],
      "default": "no",
      "type": "string",
      "recipes": [
        "znc::configure",
        "znc::install_service"
      ],
      "description": "Enable/disable debugging of ZNC service start and process.",
      "display_name": "ZNC Debug Mode"
    },
    "znc/server_throttle": {
      "required": "optional",
      "calculated": false,
      "choice": [

      ],
      "default": "3",
      "type": "string",
      "recipes": [
        "znc::configure"
      ],
      "description": "The time between two connect attempts to the same hostname to ZNC.",
      "display_name": "ZNC Server Throttle"
    }
  },
  "license": "Apache 2.0",
  "suggestions": {
  },
  "platforms": {
    "debian": ">= 0.0.0",
    "mac_os_x": ">= 0.0.0",
    "ubuntu": ">= 0.0.0"
  },
  "maintainer": "Chris Fordham",
  "long_description": "Description\n===========\n\nInstalls and configures ZNC, an IRC bouncer.\n\nRequirements\n============\n\nPlatform\n--------\n\n* Debian, Ubuntu\n\nUsage\n=====\n\ndefault\n-------\n\nInclude the default recipe in a run list, to get `znc`.  By default `znc` is installed from packages but this can be changed by using the `install_method` attribute.\n\npackage\n-------\n\nThis recipe installs ZNC from packages.\n\nsource\n------\n\nThis recipe installs ZNC from source.\n\nLicense and Author\n==================\n\nAuthor:: Seth Chisamore (<schisamo@gmail.com>)\n\nCopyright:: 2011, Seth Chisamore\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n",
  "version": "0.0.1",
  "recommendations": {
  },
  "recipes": {
    "znc::module_colloquy": "Install and enable Colloquy ZNC module.",
    "znc::modules": "Enables desired ZNC modules.",
    "znc::restart": "Restarts the ZNC daemon.",
    "znc::install_from_nightly": "Installs the nightly source snapshot of ZNC.",
    "znc::restore_config": "Restore the ZNC configuration to Git or S3.",
    "znc::add_user": "Add a ZNC user.",
    "znc::install_from_source_tarball": "Installs ZNC from remote source tarball.",
    "znc::install_from_git_devel": "Installs ZNC from the git-devel source at GitHub.",
    "znc::install_service": "Installs the ZNC service.",
    "znc::backup_config": "Backup the ZNC configuration to Git or S3.",
    "znc::configure": "Configures the ZNC main configuration.",
    "znc::install": "Install ZNC.",
    "znc::change_user_password": "Changes a ZNC user's password.",
    "znc::uninstall_package": "Uninstalls ZNC from package.",
    "znc::install_from_package": "Installs ZNC from package.",
    "znc::stop": "Stops the ZNC daemon.",
    "znc::default": "Install and configure ZNC.",
    "znc::generate_cert": "Generates x509 certificate for ZNC.",
    "znc::source": "Installs ZNC from source.",
    "znc::start": "Starts the ZNC daemon."
  },
  "groupings": {
  },
  "conflicting": {
  },
  "replacing": {
  },
  "description": "Installs/Configures ZNC IRC bouncer.",
  "providing": {
  }
}